{# your_app/templates/widgets/number_to_words.html #}
{% load static i18n %}

{# رندر کردن تگ input اصلی با استفاده از include داخلی جنگو #}
{% include "django/forms/widgets/input.html" %}

{# نمایش لیبل و span برای حروف #}
<div class="mt-2"> {# کمی فاصله #}
    <label class="form-label small text-muted" for="{{ widget.output_id }}">
        {{ widget.word_label }}
    </label>
    <span id="{{ widget.output_id }}"
          class="d-block p-2 bg-light border rounded text-primary fw-bold number-to-words-output"
          style="min-height: 40px; direction: rtl; text-align: right;">
        {% comment %}مقدار اولیه اگر value وجود داشت، اینجا می‌تواند با JS مقداردهی شود{% endcomment %}
        ...
    </span>
</div>

{# کد JavaScript اختصاصی این ویجت #}
<script>
(function() {
    "use strict";

    // توابع تبدیل (باید در اینجا یا در فایل JS جداگانه باشند)
    const yekan = ["", "یک", "دو", "سه", "چهار", "پنج", "شش", "هفت", "هشت", "نه"];
    const dahyek = ["ده", "یازده", "دوازده", "سیزده", "چهارده", "پانزده", "شانزده", "هفده", "هجده", "نوزده"];
    const dahgan = ["", "", "بیست", "سی", "چهل", "پنجاه", "شصت", "هفتاد", "هشتاد", "نود"];
    const sadgan = ["", "صد", "دویست", "سیصد", "چهارصد", "پانصد", "ششصد", "هفتصد", "هشتصد", "نهصد"];
    const baselog = ["", "هزار", "میلیون", "میلیارد", "بیلیون"];

    function numToWords(numStr) {
        let num = numStr.toString().replace(/,/g, '').replace(/[۰-۹]/g, d => d.charCodeAt(0) - 1776); // حذف کاما و تبدیل اعداد فارسی
        if (num === "" || num === null || num === undefined) return "";
        if (isNaN(num) || num.trim() === "") return "{% trans 'عدد نامعتبر' %}";
        let number = parseInt(num); // برای مقایسه با صفر
        if (number === 0) return "{% trans 'صفر' %}";
        if (num.startsWith('-')) return "{% trans 'منفی' %} " + numToWords(num.substring(1));
        // --- بقیه منطق numToWords ---
         let parts = [];
         while (num.length > 0) { parts.push(num.slice(-3)); num = num.slice(0, -3); }
         let result = [];
         for (let i = 0; i < parts.length; i++) {
             let partInt = parseInt(parts[i]);
             if(partInt === 0) continue; // رد شدن از بخش‌های صفر
             let partStr = threeDigitsToWords(partInt);
             if (partStr) {
                  if (i > 0) { // اضافه کردن نام مقیاس
                      partStr += " " + baselog[i];
                  }
                  result.push(partStr.trim());
             }
         }
         return result.reverse().join(" {% trans 'و' %} ").trim();
    }

    function threeDigitsToWords(num) {
         if (num === 0) return "";
         let result = ""; let sad = Math.floor(num / 100); let dahyekSad = num % 100;
         if (sad > 0) { result += sadgan[sad]; if (dahyekSad > 0) result += " {% trans 'و' %} "; }
         if (dahyekSad > 0) {
             if (dahyekSad < 10) result += yekan[dahyekSad];
             else if (dahyekSad < 20) result += dahyek[dahyekSad - 10];
             else { let dah = Math.floor(dahyekSad / 10); let yek = dahyekSad % 10; result += dahgan[dah]; if (yek > 0) result += " {% trans 'و' %} " + yekan[yek]; }
         }
         return result;
    }

    // --- اتصال رویداد ---
    // استفاده از ID های داینامیکی که در context پاس داده شده‌اند
    const inputElement = document.getElementById("{{ widget.attrs.id }}");
    const outputElement = document.getElementById("{{ widget.output_id }}");
    const unit = "{{ widget.unit|escapejs }}"; // واحد پول با escape

    if (inputElement && outputElement) {
        const updateWords = function() {
            const numberValue = inputElement.value;
            const words = numToWords(numberValue);
            if (words && words !== "{% trans 'عدد نامعتبر' %}") {
                 outputElement.textContent = words + (unit ? " " + unit : "");
                 outputElement.classList.remove('text-danger', 'text-muted');
                 outputElement.classList.add('text-primary');
            } else if (numberValue.trim() === "") {
                 outputElement.textContent = "...";
                 outputElement.classList.remove('text-danger', 'text-primary');
                 outputElement.classList.add('text-muted');
            } else {
                 outputElement.textContent = words; // "عدد نامعتبر"
                 outputElement.classList.add('text-danger');
                 outputElement.classList.remove('text-primary', 'text-muted');
            }
        };

        inputElement.addEventListener('input', updateWords);
        // فراخوانی اولیه برای نمایش مقدار اولیه
        updateWords();

        // فعال‌سازی numberFormatter اگر کلاسش وجود دارد
        if (typeof numberFormatter !== 'undefined' && inputElement.classList.contains('number-format')) {
             try { new numberFormatter(inputElement); } catch(e) { console.warn("numberFormatter init failed:", e); }
        }

    } else {
         console.warn("NumberToWordsWidget elements not found for ID:", "{{ widget.attrs.id }}");
    }

})(); // پایان IIFE
</script>